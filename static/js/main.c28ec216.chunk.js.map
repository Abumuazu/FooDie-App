{"version":3,"sources":["components/Navigation/navigation.component.js","components/signInForm/sign.js","components/Resgister/register.js","components/Logo/logo.component.js","components/FoodLinkForm/Foodlinkfrom.component.js","components/Rank/rank.js","components/FoodimageBox/foodimagebox.component.js","components/foodBlock/foodBlock.js","components/ListFoodContent/ListFoodContent.js","App.js","serviceWorker.js","index.js","components/Logo/bake.png"],"names":["navigation","onRouteChange","style","display","justifyContent","onClick","className","SignIn","id","htmlFor","type","name","value","Register","logo","options","max","height","width","src","bake","alt","foodLinkForm","onInputChange","onButtonSubmit","onChange","placeholder","class","Rank","FoodImageBox","imageUrl","FoodBlock","props","foodContent","val","ListFoodContent","foodContents","map","key","app","Clarifai","App","apiKey","ParticlesOpton","particles","number","density","enable","value_area","grabFoodContents","data","outputs","concepts","foodItem","Number","displayFoodContents","foodItems","setState","event","input","target","state","models","predict","FOOD_MODEL","then","response","catch","err","console","log","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.c28ec216.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst navigation = ({ onRouteChange }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n      <p\r\n        onClick={() => onRouteChange(\"signin\")}\r\n        className=\" f3 dim pointer underline white pointer\"\r\n      >\r\n        SignOut\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default navigation;\r\n","import React from \"react\";\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n  return (\r\n    <article className=\"br3 shadow-5  ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n      <div className=\" container\">\r\n        <main className=\"pa4 black-80 bg-pink\">\r\n          <div className=\"measure \">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={() => onRouteChange(\"home\")}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <input\r\n                onClick={() => onRouteChange(\"Register\")}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n//\r\n/* <div\r\n classNameName=\"sans-serif w-90 white mw6 center relative cover bg-top mt2\"\r\n style=\"background-image:url(https://source.unsplash.com/dgE3lWVyDh8/1200x900);\"\r\n>\r\n </div> */\r\n","import React from \"react\";\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n  return (\r\n    <article className=\"br3 shadow-5  ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n      <div className=\" container\">\r\n        <main className=\"pa4 black-80 bg-pink\">\r\n          <div className=\"measure \">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                  name\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={() => onRouteChange(\"home\")}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport \"../Logo/logo.styles.css\";\r\nimport bake from \"../Logo/bake.png\";\r\n\r\nconst logo = () => {\r\n  return (\r\n    <div className=\"container \">\r\n      <Tilt\r\n        className=\"Tilt shadow-6 bg-pink\"\r\n        options={{ max: 50 }}\r\n        style={{ height: 100, width: 100 }}\r\n      >\r\n        <div className=\"Tilt-inner\">\r\n          <img className=\"img \" src={bake} alt=\"logo\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\nimport \"../FoodLinkForm/Foodlinkform.styles.css\";\r\nconst foodLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div className=\" bigContainer\">\r\n      <div className=\"input-con\">\r\n        <div className=\" \">\r\n          <label className=\"\" htmlFor=\"image\">\r\n            Image Url\r\n          </label>\r\n          <input\r\n            name=\"image\"\r\n            id=\"image\"\r\n            onChange={onInputChange}\r\n            className=\" input  br-pill shadow-5\"\r\n            type=\"text\"\r\n            placeholder=\"paste your URL here\"\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div class=\"btn tc mt3\">\r\n        <button\r\n          class=\"f10 grow no-underline br-pill ph3 pv2 mb2 dib white bg-near-black\"\r\n          onClick={onButtonSubmit}\r\n        >\r\n          Generate\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default foodLinkForm;\r\n","import React from \"react\";\r\n\r\nconst Rank = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"rank f3 white \">\r\n        {\" Welcome Mzee, Your present rank is.....\"}\r\n      </div>\r\n      <div className=\" f3 white\">{\"#5\"}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"../FoodimageBox/foodimagebox.styles.css\";\r\n\r\nconst FoodImageBox = ({ imageUrl }) => {\r\n  return (\r\n    <div className=\" container\">\r\n      <div className=\"wrapper \">\r\n        <div className=\"image\">\r\n          <img alt=\"imageUrl\" src={imageUrl} width=\"500px\" height=\"auto\" />\r\n        </div>\r\n        <div className=\"content\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoodImageBox;\r\n","import React from \"react\";\r\n\r\nconst FoodBlock = (props) => {\r\n  return (\r\n    <div className=\"content-container\">\r\n      <ul className=\"model-container-tag-list\">\r\n        <li className=\"model-container-tag-list-column content-container shadow-5\">\r\n          <p>\r\n            <span className=\"predicted-concept-name f6 f5-ns fw6 lh-title black mv0\">\r\n              {props.foodContent.name}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span className=\"tag-prob\"> {props.foodContent.val} </span>\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoodBlock;\r\n","import React from \"react\";\r\nimport FoodBlock from \"../foodBlock/foodBlock\";\r\nimport \"../ListFoodContent/ListFoodContent.css\";\r\n\r\nconst ListFoodContent = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"food-content \">\r\n        <ul className=\"model-container-tag-list\">\r\n          <li className=\"model-container-tag-list-column bg-pink  shadow-5 \">\r\n            <p>\r\n              <span className=\"predicted-concept-name f6 f5-ns fw6 lh-title black mv0 \">\r\n                Predicted Contents\r\n              </span>\r\n            </p>\r\n            <p>\r\n              <span className=\"tag-prob f6 f5-ns fw6 lh-title black mv0 \">\r\n                {\" \"}\r\n                Assurance\r\n              </span>\r\n            </p>\r\n          </li>\r\n        </ul>\r\n\r\n        <div className=\"card-list\">\r\n          {props.foodContents.map((foodContent) => (\r\n            <FoodBlock key={foodContent.id} foodContent={foodContent} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListFoodContent;\r\n","import React, { Component } from \"react\";\nimport Particles from \"react-particles-js\";\nimport Clarifai from \"clarifai\";\nimport Navigation from \"./components/Navigation/navigation.component\";\nimport SignIn from \"./components/signInForm/sign\";\nimport Register from \"./components/Resgister/register\";\nimport Logo from \"./components/Logo/logo.component\";\nimport FoodLinkForm from \"./components/FoodLinkForm/Foodlinkfrom.component\";\nimport Rank from \"./components/Rank/rank\";\nimport FoodImageBox from \"./components/FoodimageBox/foodimagebox.component\";\nimport ListFoodContent from \"./components/ListFoodContent/ListFoodContent\";\nimport \"./App.css\";\n\nconst app = new Clarifai.App({\n  apiKey: \"8abc6096267046fe8864cc5a0da7b88a\",\n});\nconst ParticlesOpton = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      foodContents: [],\n      input: \" \",\n      imageUrl: \" \",\n      route: \"signin\",\n    };\n  }\n  grabFoodContents = (data) => {\n    const foodItems = data.outputs[0].data.concepts;\n    return foodItems.map((foodItem) => {\n      const name = foodItem.name;\n      const val = Number(foodItem.value);\n      return {\n        name,\n        val,\n      };\n    });\n  };\n  displayFoodContents = (foodItems) => {\n    this.setState({ foodContents: foodItems });\n  };\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .predict(Clarifai.FOOD_MODEL, this.state.input)\n      .then((response) =>\n        this.displayFoodContents(this.grabFoodContents(response))\n      )\n      .catch((err) => console.log(err));\n  };\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  };\n  render() {\n    const { imageUrl, foodContents, route } = this.state;\n    return (\n      <div className=\"App \">\n        <Particles className=\"particles\" params={ParticlesOpton} />\n\n        {route === \"home\" ? (\n          <div>\n            <Navigation onRouteChange={this.onRouteChange} />\n            <Logo />\n            <div className=\"section-app shadow-5\">\n              <div className=\"item2\">\n                <Rank />\n                <FoodLinkForm\n                  onInputChange={this.onInputChange}\n                  onButtonSubmit={this.onButtonSubmit}\n                />\n                <FoodImageBox imageUrl={imageUrl} />\n              </div>\n              <div className=\"food-container\">\n                <h3 className=\"food\">Food name and Ingredients</h3>\n              </div>{\" \"}\n              <ListFoodContent\n                imageUrl={imageUrl}\n                foodContents={foodContents}\n                displayFoodContents={this.displayFoodContents}\n              />\n            </div>\n          </div>\n        ) : route === \"signin\" ? (\n          <SignIn onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register onRouteChange={this.onRouteChange} />\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/bake.c4f1d057.png\";"],"sourceRoot":""}