{"version":3,"sources":["components/Navigation/navigation.component.js","components/signInForm/sign.js","components/Resgister/register.js","components/Logo/logo.component.js","components/FoodLinkForm/Foodlinkfrom.component.js","components/Rank/rank.js","components/FoodimageBox/foodimagebox.component.js","components/foodBlock/foodBlock.js","components/ListFoodContent/ListFoodContent.js","App.js","serviceWorker.js","index.js","components/Logo/bake.png"],"names":["navigation","onRouteChange","style","display","justifyContent","onClick","className","SignIn","id","htmlFor","type","name","value","Register","logo","options","max","height","width","src","bake","alt","foodLinkForm","onInputChange","onButtonSubmit","onChange","placeholder","Rank","FoodImageBox","imageUrl","FoodBlock","props","foodContent","val","ListFoodContent","foodContents","map","key","app","Clarifai","App","apiKey","ParticlesOpton","particles","number","density","enable","value_area","grabFoodContents","data","outputs","concepts","foodItem","Number","displayFoodContents","foodItems","setState","event","input","target","state","models","predict","FOOD_MODEL","then","response","catch","err","console","log","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.ae00b229.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst navigation = ({ onRouteChange }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n      <p\r\n        onClick={() => onRouteChange(\"signin\")}\r\n        className=\" f3 dim pointer underline white pointer\"\r\n      >\r\n        SignOut\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default navigation;\r\n","import React from \"react\";\r\n\r\nconst SignIn = ({ onRouteChange }) => {\r\n  return (\r\n    <article className=\"br3 shadow-5  ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n      <div className=\" container\">\r\n        <main className=\"pa4 black-80 bg-pink\">\r\n          <div className=\"measure \">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={() => onRouteChange(\"home\")}\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <input\r\n                onClick={() => onRouteChange(\"Register\")}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n//\r\n/* <div\r\n classNameName=\"sans-serif w-90 white mw6 center relative cover bg-top mt2\"\r\n style=\"background-image:url(https://source.unsplash.com/dgE3lWVyDh8/1200x900);\"\r\n>\r\n </div> */\r\n","import React from \"react\";\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n  return (\r\n    <article className=\"br3 shadow-5  ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n      <div className=\" container\">\r\n        <main className=\"pa4 black-80 bg-pink\">\r\n          <div className=\"measure \">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                  name\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={() => onRouteChange(\"home\")}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport \"../Logo/logo.styles.css\";\r\nimport bake from \"../Logo/bake.png\";\r\n\r\nconst logo = () => {\r\n  return (\r\n    <div className=\"LogoContainer \">\r\n      <Tilt\r\n        className=\"Tilt shadow-6 bg-pink\"\r\n        options={{ max: 50 }}\r\n        style={{ height: 50, width: 50 }}\r\n      >\r\n        <div className=\"Tilt-inner\">\r\n          <img className=\"img \" src={bake} alt=\"logo\" />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\nimport \"../FoodLinkForm/Foodlinkform.styles.css\";\r\nconst foodLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div className=\" bigContainer\">\r\n      <div className=\"input-con\">\r\n        <div className=\" \">\r\n          <label className=\"\" htmlFor=\"image\">\r\n            Image Url\r\n          </label>\r\n          <span>\r\n            <input\r\n              name=\"image\"\r\n              id=\"image\"\r\n              onChange={onInputChange}\r\n              className=\" f50 input  br-pill shadow-5\"\r\n              type=\"text\"\r\n              placeholder=\"paste your URL here\"\r\n            ></input>\r\n            <button\r\n              className=\"f10 grow no-underline br-pill ph3 pv2 mb2 dib white bg-near-black\"\r\n              onClick={onButtonSubmit}\r\n            >\r\n              Generate\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default foodLinkForm;\r\n","import React from \"react\";\r\n\r\nconst Rank = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"rank f3 white \">\r\n        {\" Welcome Mzee, Your present rank is.....\"}\r\n      </div>\r\n      <div className=\" f3 white\">{\"#5\"}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"../FoodimageBox/foodimagebox.styles.css\";\r\n\r\nconst FoodImageBox = ({ imageUrl }) => {\r\n  return (\r\n    <div className=\" container\">\r\n      <div className=\"wrapper bg-pink \">\r\n        <div className=\"image\">\r\n          <img alt=\"imageUrl\" src={imageUrl} width=\"500px\" height=\"auto\" />\r\n        </div>\r\n        <div className=\"content\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoodImageBox;\r\n","import React from \"react\";\r\n\r\nconst FoodBlock = (props) => {\r\n  return (\r\n    <div className=\"content-container\">\r\n      <ul className=\"model-container-tag-list\">\r\n        <li className=\"model-container-tag-list-column content-container shadow-5\">\r\n          <p>\r\n            <span className=\"predicted-concept-name f6 f5-ns fw6 lh-title black mv0\">\r\n              {props.foodContent.name}\r\n            </span>\r\n          </p>\r\n          <p>\r\n            <span className=\"tag-prob\"> {props.foodContent.val} </span>\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoodBlock;\r\n","import React from \"react\";\r\nimport FoodBlock from \"../foodBlock/foodBlock\";\r\nimport \"../ListFoodContent/ListFoodContent.css\";\r\n\r\nconst ListFoodContent = (props) => {\r\n  return (\r\n    <div>\r\n      <div className=\"food-content \">\r\n        <ul className=\"model-container-tag-list\">\r\n          <li className=\"model-container-tag-list-column bg-pink  shadow-5 \">\r\n            <p>\r\n              <span className=\"predicted-concept-name f6 f5-ns fw6 lh-title black mv0 \">\r\n                Predicted Contents\r\n              </span>\r\n            </p>\r\n            <p>\r\n              <span className=\"tag-prob f6 f5-ns fw6 lh-title black mv0 \">\r\n                {\" \"}\r\n                Assurance\r\n              </span>\r\n            </p>\r\n          </li>\r\n        </ul>\r\n\r\n        <div className=\"card-list\">\r\n          {props.foodContents.map((foodContent) => (\r\n            <FoodBlock key={foodContent.id} foodContent={foodContent} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListFoodContent;\r\n","import React, { Component } from \"react\";\r\nimport Particles from \"react-particles-js\";\r\nimport Clarifai from \"clarifai\";\r\nimport Navigation from \"./components/Navigation/navigation.component\";\r\nimport SignIn from \"./components/signInForm/sign\";\r\nimport Register from \"./components/Resgister/register\";\r\nimport Logo from \"./components/Logo/logo.component\";\r\nimport FoodLinkForm from \"./components/FoodLinkForm/Foodlinkfrom.component\";\r\nimport Rank from \"./components/Rank/rank\";\r\nimport FoodImageBox from \"./components/FoodimageBox/foodimagebox.component\";\r\nimport ListFoodContent from \"./components/ListFoodContent/ListFoodContent\";\r\nimport \"./App.css\";\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: \"8abc6096267046fe8864cc5a0da7b88a\",\r\n});\r\nconst ParticlesOpton = {\r\n  particles: {\r\n    number: {\r\n      value: 150,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800,\r\n      },\r\n    },\r\n  },\r\n};\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      foodContents: [],\r\n      input: \" \",\r\n      imageUrl: \" \",\r\n      route: \"signin\",\r\n    };\r\n  }\r\n  grabFoodContents = (data) => {\r\n    const foodItems = data.outputs[0].data.concepts;\r\n    return foodItems.map((foodItem) => {\r\n      const name = foodItem.name;\r\n      const val = Number(foodItem.value);\r\n      return {\r\n        name,\r\n        val,\r\n      };\r\n    });\r\n  };\r\n  displayFoodContents = (foodItems) => {\r\n    this.setState({ foodContents: foodItems });\r\n  };\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n  onButtonSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    app.models\r\n      .predict(Clarifai.FOOD_MODEL, this.state.input)\r\n      .then((response) =>\r\n        this.displayFoodContents(this.grabFoodContents(response))\r\n      )\r\n      .catch((err) => console.log(err));\r\n  };\r\n  onRouteChange = (route) => {\r\n    this.setState({ route: route });\r\n  };\r\n  render() {\r\n    const { imageUrl, foodContents, route } = this.state;\r\n    return (\r\n      <div className=\"App \">\r\n        <Particles className=\"particles\" params={ParticlesOpton} />\r\n        {route === \"home\" ? (\r\n          <div>\r\n            <Navigation onRouteChange={this.onRouteChange} />\r\n            <Logo />\r\n            <div className=\"section-app shadow-5\">\r\n              <div className=\"item2\">\r\n                <Rank />\r\n                <FoodLinkForm\r\n                  onInputChange={this.onInputChange}\r\n                  onButtonSubmit={this.onButtonSubmit}\r\n                />\r\n                <FoodImageBox imageUrl={imageUrl} />\r\n              </div>\r\n              <div className=\"food-container\">\r\n                <h3 className=\"food\">Food name and Ingredients</h3>\r\n              </div>{\" \"}\r\n              <ListFoodContent\r\n                imageUrl={imageUrl}\r\n                foodContents={foodContents}\r\n                displayFoodContents={this.displayFoodContents}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : route === \"signin\" ? (\r\n          <SignIn onRouteChange={this.onRouteChange} />\r\n        ) : (\r\n          <Register onRouteChange={this.onRouteChange} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"tachyons\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/bake.c4f1d057.png\";"],"sourceRoot":""}